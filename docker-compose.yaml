# Dev version of docker-compose

version: '3'

services:
  app:
    container_name: app
    build:
      context: .
      args:
        APP_WORKDIR: "/app"
    volumes:
      - ./app:/app/app:ro
      - ./tests:/app/tests:ro
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env
    environment:
      - DOCKER=1
    restart: always
    command: ./run
    depends_on:
      - app-db
      - runner-server
      - app-redis

  app-redis:
    container_name: app-redis
    image: redis:7
    volumes:
      - app-redis-data:/data
    restart: always

  callback-server:
    container_name: callback-server
    build:
      context: .
      args:
        APP_WORKDIR: "/app"
    volumes:
      - ./app:/app/app:ro
    env_file:
      - .env
    restart: always
    command: poetry run uvicorn app.callback_server:app --host 0.0.0.0 --port ${APP_PORT} --reload
    depends_on:
      - app

  app-db:
    image: postgres:16
    container_name: app-db
    volumes:
      - ./data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    restart: always

  runner-server:
    image: runner-service
    container_name: runner-server
    volumes:
      - ./runner/judge0.conf:/api/judge0.conf:ro
    privileged: true
    restart: always
    command: ['./scripts/server']
    depends_on:
      - worker

  worker:
    image: runner-service
    container_name: worker
    command: ['./scripts/workers']
    volumes:
      - ./runner/judge0.conf:/api/judge0.conf:ro
    privileged: true
    restart: always
    depends_on:
      - runner-db
      - runner-redis

  runner-db:
    container_name: runner-db
    image: postgres:16
    env_file: runner/judge0.conf
    volumes:
      - runner-postgres-data:/var/lib/postgresql/data/
    restart: always

  runner-redis:
    container_name: runner-redis
    image: redis:7
    command: [
      "bash", "-c", 'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: runner/judge0.conf
    volumes:
      - redis-data:/data
    restart: always

volumes:
  runner-postgres-data:
  redis-data:
  app-redis-data:
